package lockz

import (
	"fmt"
	"testing"
	"time"
)

func Test_Lockz(t *testing.T) {
	lockOpts := Options{
		SessionTTLOpt: 10 * time.Second,
		ExtendLimit:   5,
		LockDelay:     5 * time.Second,
	}

	distributedLock, _ := NewLocker(lockOpts)
	acquired, err := distributedLock.ObtainLock("key1")
	fmt.Println(acquired)
	fmt.Println(err)

	for i := 0; i <= 1000; i++ {
		acquired, err = distributedLock.ExtendLease("key1")
		fmt.Println(acquired)
		fmt.Println(err)
		time.Sleep(2 * time.Second)
	}

	// distributedLock.UnLock("key1")
}

func Test_Lockz2(t *testing.T) {
	lockOpts := Options{
		SessionTTLOpt: 10 * time.Second,
		ExtendLimit:   5,
		LockDelay:     5 * time.Second,
	}

	distributedLock, _ := NewLocker(lockOpts)
	distributedLock.CheckSession()
	distributedLock.Watch("key1")
}
